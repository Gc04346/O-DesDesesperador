"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from django.contrib.messages import constants as messages

# overrigde to allow deezer login
SESSION_COOKIE_SECURE = False

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0-djas8d-0ajs87kd09asnytd0a9msdn0nm7s9au0hdpuoashd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []
INTERNAL_IPS = []

# Application definition

PROJECT_APPS = [
    'django_project.apps.contrib',
    'django_project.apps.core'
]

DEPENDENCY_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat',
    'crispy_forms',
    'bootstrap3',
    'bootstrap_datepicker_plus',
    'django_celery_results',
    'post_office',
    'djcelery_email',
    'django_cleanup.apps.CleanupConfig',

    'impersonate'
]

INSTALLED_APPS = PROJECT_APPS + DEPENDENCY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'impersonate.middleware.ImpersonateMiddleware'  # impersonate
]

ROOT_URLCONF = 'django_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'django_project.contrib.settings_context_processor.settings_export'
            ],
        },
    },
]

WSGI_APPLICATION = 'django_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, '../../db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'pt_BR'
TIME_ZONE = 'America/Sao_Paulo'
#
LOCALE_PATHS = [
    os.path.join(BASE_DIR, '../locale')
]

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

STATIC_URL = '/assets/'
STATIC_ROOT = os.path.join(BASE_DIR, '../static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Mail post_office
EMAIL_BACKEND = 'djcelery_email.backends.CeleryEmailBackend'

POST_OFFICE = {
    'LOG_LEVEL': 1,  # Log only failed deliveries
    'SENDING_ORDER': ['created'],
    'EMAIL_BACKEND': 'djcelery_email.backends.CeleryEmailBackend',
    'DEFAULT_PRIORITY': 'now',
}

# FRONTDATA
SITE_URL = 'http://127.0.0.1:8000'
GRAPPELLI_ADMIN_TITLE = "Presave  Onimusic"
SITE_NAME = "Presave  Onimusic - Admin"
FRONT_END__SITE_NAME = SITE_NAME
FRONT_END__DESCRIPTION = SITE_NAME
FRONT_END__OG_IMAGE = SITE_URL + "/assets/img/og_image.jpg"

ADMINS = (
    ('Nelson Neto', 'nelsontristao@gmail.com'),
)
MANAGERS = ADMINS

# use for celery beat
# from celery.schedules import crontab
# CELERY_BEAT_SCHEDULE = {
#     'check_bulk_files_to_remove': {
#         'task': 'music_system.apps.label_catalog.tasks.clean_files_youtube_asset_bulk',
#         'schedule': crontab(minute='00',hour='00')
#     },
#     'check_reports_files_to_remove': {
#         'task': 'music_system.apps.label_reports.tasks.clean_files_reports_task',
#         'schedule': crontab(minute='00',hour='00')
#     },
# }
#
DJANGO_CELERY_RESULTS_TASK_ID_MAX_LENGTH = 191
CELERY_TIMEZONE = 'UTC'
CELERY_RESULT_BACKEND = 'django-db'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, '../../log/', 'debug.log'),
            'formatter': 'verbose',
        },
        'tasks_handler': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, '../../log/', 'tasks.log'),
            'formatter': 'verbose',
        },
        'signals_handler': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, '../../log/', 'signals.log'),
            'formatter': 'verbose',
        },
        'views_handler': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, '../../log/', 'views.log'),
            'formatter': 'verbose',
        },
        'models_handler': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, '../../log/', 'models.log'),
            'formatter': 'verbose',
        },
        'admin_handler': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, '../../log/', 'admin.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propagate': True,
        },
        'tasks': {
            'handlers': ['tasks_handler'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propogate': True,
        },
        'signals': {
            'handlers': ['signals_handler'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propogate': True,
        },
        'views': {
            'handlers': ['views_handler'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propogate': True,
        },
        'models': {
            'handlers': ['models_handler'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propogate': True,
        },
        'admin': {
            'handlers': ['admin_handler'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propogate': True,
        },
    },
}

CRISPY_TEMPLATE_PACK = 'bootstrap3'

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# FILE UPLOAD PERMISSIONS
FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o750
FILE_UPLOAD_PERMISSIONS = 0o644

LOGIN_REDIRECT_URL = "homepage"
LOGIN_URL = "/accounts/login"
LOGOUT_REDIRECT_URL = LOGIN_URL

DEFAULT_PRICES = {
    'platform_fee': 350.00,
    'music_director_fee': 1500.00,
    'main_musician_fee': 750.00,
    'sub_musician_fee': 50.00,
    'extra_distance_fee': 15.00,
}